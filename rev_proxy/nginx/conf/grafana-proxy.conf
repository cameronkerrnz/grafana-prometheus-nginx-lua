    include "/etc/nginx/conf/grafana-init-logging-vars.conf";

    # Ref: https://grafana.com/tutorials/run-grafana-behind-a-proxy/
    # Proxy Grafana Live WebSocket connections.
    location /api/live/ws {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_pass $grafana_backend_url;
    }

    # Grafana endpoints for querying the datasources in Grafana 7 and 9
    #
    # BUG: Hasn't been tested with other datasources yet, and it doesn't test for this.
    #
    location ~ ^(/api/datasources/|/api/ds/query) {
        proxy_pass $grafana_backend_url;
        proxy_buffering on;

        proxy_http_version	1.1;
        proxy_set_header Host	$host;
        
        proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto	$scheme;
        proxy_set_header X-Forwarded-Host	$host;
        proxy_set_header X-Forwarded-Port	$server_port;

        rewrite_by_lua_file "/etc/nginx/lua/datasource-rewrite.lua";

        access_log /dev/stdout grafana_nginx_dsquery_v0 if=$datasource_request_is_slow;

        log_by_lua_file "/etc/nginx/lua/datasource-log.lua";
    }

    location /api/dashboards/uid {
        proxy_pass $grafana_backend_url;
        proxy_buffering on;

        proxy_http_version	1.1;
        proxy_set_header Host	$host;
        
        proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto	$scheme;
        proxy_set_header X-Forwarded-Host	$host;
        proxy_set_header X-Forwarded-Port	$server_port;

        # The purpose of this location is to harvest dashboard names and panel names in
        # the JSON model of the dashboards as they are loaded.

        # If you did this using body_filter_by_lua*, you would have to deal with all the
        # chunking issues, which would be tragic. So we simply using rewrite_by_lua*
        # where we can use ngx.location.capture.
        #
        # This does mean that the backend server will see two requests for the JSON
        # model of a dashboard, but considering we cache our lookup results, that should
        # be okay, because the model is not downloaded frequently.

        rewrite_by_lua_file "/etc/nginx/lua/dashboards-rewrite.lua";

        # Could be useful for various reasons, but not related to slow-query logging
        access_log /dev/stdout grafana_nginx_general_v0 if=$grafana_loggable_path;
    }

    location / {
        proxy_pass $grafana_backend_url;
        proxy_buffering on;

        proxy_http_version	1.1;
        proxy_set_header Host	$host;
        
        proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto	$scheme;
        proxy_set_header X-Forwarded-Host	$host;
        proxy_set_header X-Forwarded-Port	$server_port;

        # Could be useful for various reasons, but not related to slow-query logging
        access_log /dev/stdout grafana_nginx_general_v0 if=$grafana_loggable_path;
    }
